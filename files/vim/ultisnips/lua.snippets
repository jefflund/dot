snippet l
local $0
endsnippet

snippet fn
function ${1:name}($2)
	$0
end
endsnippet

snippet afn
function($1)
	$0
end
endsnippet

snippet lfn
local function ${1:name}($2)
	$0
end
endsnippet

snippet rfn
function ${1:cls}:${2:name}($3)
	$0
end
endsnippet

snippet fori
for ${1:i}=${2:1},${3:n} do
	$0
end
endsnippet

snippet forv
for _, ${1:v} in ${2:i}pairs(${3:vals}) do
	$0
end
endsnippet

snippet if
if ${1:cond} then
	$0
end
endsnippet

snippet req
local ${1:name} = require("${0:module}")
endsnippet

snippet new
function ${1:cls}:new($2)
	$0
end
endsnippet

snippet smt
setmetatable($0
endsnippet

snippet +=
${1:var} = $1 + ${0:1}
endsnippet

snippet -=
${1:var} = $1 - ${0:1}
endsnippet
