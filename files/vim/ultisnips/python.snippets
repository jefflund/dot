snippet im
import ${0:mod}
endsnippet

snippet fia
from __future__ import annotations
endsnippet

snippet ima
import ${1:mod} as ${0:name}
endsnippet

snippet fim
from ${1:pkg} import ${0:mod}
endsnippet

snippet fima
from ${1:pkg} import ${2:mod} as ${0:name}
endsnippet

snippet fn
def ${1:name}($2) -> ${3:None}:
	$0
endsnippet

snippet sfn
def ${1:name}(self$2) -> ${3:None}:
	$0
endsnippet

snippet cases
def test_${1:name}(self):
	${2:cases} = [
		$3
	]
	for $4 in $2:
		with self.subTest($5):
			$0
endsnippet

snippet cl
class ${1:Name}:
	$0
endsnippet


snippet dc
@dataclasses.dataclass${1}
class ${2:Name}:
	$0
endsnippet

snippet if
if ${1:cond}:
	$0
endsnippet

snippet el
else:
	$0
endsnippet

snippet elif
elif ${1:cond}:
	$0
endsnippet

snippet for
for ${1:x} in ${2:xs}:
	$0
endsnippet

snippet forr
for ${1:i} in range(${2:n}):
	$0
endsnippet

snippet fore
for ${1:i}, ${2:x} in enumerate(${3:xs}):
	$0
endsnippet

snippet forz
for ${1:x}, ${2:y} in zip(${3:xs}, ${4:ys}):
	$0
endsnippet

snippet main
if __name__ == "__main__":
	$0
endsnippet
